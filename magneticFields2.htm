<html>
<head>

	<script src="Three.js"></script>
	
	<script src="solenoid.js"></script>

</head>
<body>

<canvas id="myCanvas" width="400" height="400"></canvas>

<script type="text/javascript">



/// magnet properties
magB = 150;  // length
magA = 20;  // radius 
magI = 100;   // 1 amp current
magLoops = 5;  // how many loops



function drawMag(ctx, cx, cy) {
	ctx.beginPath();
	ctx.strokeStyle = "#f00";
	ctx.strokeRect(cx - magA, cy - magB/2, 2*magA, magB);
}

var cx = 200;
var cy = 200;


var canvas=document.getElementById('myCanvas');
var ctx=canvas.getContext('2d');


drawMag(ctx, cx,cy);



// get max field strength
var maxB = calcLoopField(magA, 0, 0, magI);
var maxBV = new THREE.Vector2(maxB[0], maxB[1]);
var maxB = maxBV.length();



ctx.beginPath();
ctx.strokeStyle = "#000";

var step = 10;
var range = 200;


// iterate over field
for (var x = -range; x<range; ) {
	for (var y = -range; y<range; ) {
		
		
		
		
		BV = calcSolenoidField(x,y,magA,magB,magI,magLoops);
		
		var c = 230 - Math.round(230 * BV.length() / maxB);
		ctx.beginPath();
		ctx.strokeStyle = "rgb(" + c + "," + c + ","+ c+ ")";
		
		BV = BV.normalize();
		
		
		
		// plot something
		var fl = step * 1.3;
		var x1 = x+ (x>0?1:-1)*BV.y * fl;
		var y1 = y+ BV.x * fl;
		
		ctx.moveTo(cx + x, cy+ y);
		ctx.lineTo(cx+x1,cy+y1);
		ctx.stroke();
		
		y += step;
	}
	x += step;
} 

ctx.stroke();

console.log("done");



// now animate :)
setInterval(draw, 1);


var particles = [];

// create particles
var numP = 50;
for (var lc = 0; lc < numP; lc++) {
	var p = new THREE.Vector2(Math.random() * 2 * range - cx, Math.random() * 2 * range - cy);
	particles.push(p);
}

ctx.clearRect(0, 0, canvas.width, canvas.height);
drawMag(ctx, cx,cy);

var mx = 0;
var my = 0;

(function() {
    window.onmousemove = handleMouseMove;
    function handleMouseMove(event) {
        event = event || window.event; // IE-ism
        mx = event.clientX;
        my = event.clientY;
        // event.clientX and event.clientY contain the mouse position
    }
})();

  
function draw() {
	// Fade out the lines slowly by drawing a rectangle over the entire canvas
		ctx.fillStyle = 'rgba(255,255,255,0.05)';
   		if (Math.random() < 0.01) 
   			ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);
  
    // update particles
    for (var lc = 0; lc < numP; lc++) {
    	var p = particles[lc];
    	
    	// get field vectors at particle location
    	BV = calcSolenoidField(p.x,p.y,magA,magB,magI,magLoops);
    	
    	var c = 230 - Math.round(230 * BV.length() / maxB);
		ctx.beginPath();
		ctx.strokeStyle = "rgb(" + (c+20) + "," + c + ","+ c+ ")";
    	
    	
    	BV.normalize();
    	BV.multiplyScalar(1.2);
    	
    	
    	
    	// move along field
    	if (p.x < 0) { BV.y = -BV.y;  };
    	p.x += BV.y;
    	p.y += BV.x;
    	
    	var x = cx + p.x;
    	var y = cy + p.y;
    	
    	ctx.arc(x,y,0.1,0,2*Math.PI);
    	ctx.stroke();
    	
    	
    	//  check for boundary conditions and reset
    	if (p.length() > 300 || Math.random() < 0.01) {
    		p.x = mx + Math.random() * 20 - cx  -10;
    		p.y = my + (Math.random() * 20) - cy - 10;
    	}
    
    }
    
    
  
}


</script>


</body>
</html>